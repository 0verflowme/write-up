
from Crypto.Util.number import isPrime
import random


def GenROCAPrime():
    l = 424
    #This is a magic number
    m = 136798100663240822199584482903026244896116416344106704058806838213895795474149605111042853590
    p = 1
    while not isPrime(p):
        a = random.randrange(0, m)
        k_bnd = (2**l)//m
        k = random.randrange(0, k_bnd)
        c = pow(0x10001, a, m)
        p = k*m + c
    return p



p = GenROCAPrime()
q = GenROCAPrime()
N = p*q
e = 0x10001
print(f"N = {N}")

#N = 1172182071079403612819460591410436801254598455663212814122676976455521772943555586683995840410187689112480076452984704299817334381387842689748983063082229411869124571739688203711476164271691372368112347398301683214529319606705993490175490698699529245499839

print(f"e = {e}")

#e = 65537


flag = "SCTF{*************************************redacted***************************************}"
pt = int.from_bytes(flag.encode(), "big")
ct = pow(pt, e, N)
print(ct)

#ct = 96709653113995447889069885726443915046145547045427406134082132152962349037010518017639393742816031781412745607010844837880349981090661985056562860660785120635366505165304951707783486361394735014070003093699368800709707494646119350233428007131415663152801



