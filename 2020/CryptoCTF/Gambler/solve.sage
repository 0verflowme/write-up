#!/usr/bin/env sage
from Crypto.Util.number import long_to_bytes as l2b
from os import urandom

# confirmed correct
a = 1943402024680744755111658687177410728497911559794040155839892504999850906785274808998707964118154111576254471053083324497256153386412050707437463288869415
b = 6212043767705740658788791480596026118933023444135891302123728109262301618682739454749834396545265538593823284857946195942865161672044373768291485757712066
p = 12889381477085249422413805485388909076120636303888271780949568640370373256439696936718477462404071758937830916795514284521156650865267202040516221486256057
ct = 11098885129218921619511321500999560752994977071912915874720207415616657885874432379085247591170053973632703541775652497749163914425638501632101979231399233
assert ct < p and is_prime(p)

F.<x> = PolynomialRing(Zmod(p))
f = x ^ 3 + a * x + b - ct
sols = f.roots()

for sol, _ in sols:
    flag_cand = l2b(sol)
    if b'CCTF' in flag_cand:
        flag = flag_cand.decode()
        break

print(flag)
